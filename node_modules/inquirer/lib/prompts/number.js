/**
 * `input` type prompt
 */

import Input from './input.js';

/**
 * Extention of the Input prompt specifically for use with number inputs.
 */

export default class NumberPrompt extends Input {
  /**
   * Filters and processes the input to convert it into a number if possible. If the input is invalid or not provided, returns the default value.
   * @param {string | null} input - The input string that needs to be processed.
   * @returns {number} - The processed number or NaN if the input is invalid.
   *
   * Examples:
   * filterInput("123") // Returns 123
   * filterInput("-123.45") // Returns -123.45
   * filterInput("abc") // Returns NaN
   * filterInput(null) // Returns NaN (assuming default is undefined)
   */
  filterInput(input) {
    if (input && typeof input === 'string') {
      input = input.trim();
      // Match a number in the input
      const numberMatch = input.match(/(^-?\d+|^-?\d+\.\d*|^\d*\.\d+)(e\d+)?$/);
      // If a number is found, return that input.
      if (numberMatch) {
        return Number(numberMatch[0]);
      }
    }

    // If the input was invalid return the default value.
    return this.opt.default == null ? Number.NaN : this.opt.default;
  }
}

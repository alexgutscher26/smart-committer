/**
 * Increments or decrements an index within a list based on the given direction and options.
 *
 * @param {number} current - The current index in the list.
 * @param {'up' | 'down'} dir - The direction to move the index ('up' or 'down').
 * @param {Object} opt - Options object containing additional parameters.
 * @param {Array} opt.choices - The array of choices from which the index is incremented/decremented.
 * @param {boolean} [opt.loop=true] - Whether the index should loop around when reaching the start or end of the list.
 * @returns {number} - The new index after incrementing or decrementing based on the given direction and options.
 * @throws {Error} - Throws an error if 'dir' is not 'up' or 'down'.
 *
 * @example
 * // Returns 2
 * console.log(incrementListIndex(1, 'up', { choices: [10, 20, 30, 40], loop: true }));
 *
 * @example
 * // Returns 3
 * console.log(incrementListIndex(2, 'down', { choices: [10, 20, 30, 40], loop: false }));
 */
export default function incrementListIndex(current, dir, opt) {
  const len = opt.choices.realLength;
  const shouldLoop = 'loop' in opt ? Boolean(opt.loop) : true;
  if (dir === 'up') {
    if (current > 0) {
      return current - 1;
    }
    return shouldLoop ? len - 1 : current;
  }
  if (dir === 'down') {
    if (current < len - 1) {
      return current + 1;
    }
    return shouldLoop ? 0 : current;
  }
  throw new Error('dir must be up or down');
}

/**
 * `input` type prompt
 */

import Input from './input.js';

/**
 * Extention of the Input prompt specifically for use with number inputs.
 */

export default class NumberPrompt extends Input {
  /**
   * Filters and processes the input string to extract and return a number. If the input is invalid,
   * returns a default value.
   *
   * @param {string} input - The input string to be processed.
   * @returns {number} - The extracted number or the default value if input is invalid.
   *
   * Example usage:
   * const result1 = filterInput(" 42 ");
   * // result1 will be 42
   *
   * const result2 = filterInput("abc");
   * // result2 will be NaN, assuming this.opt.default is not provided
   *
   * @throws {Error} - Throws an error if the input is invalid and a default value is not specified.
   */
  filterInput(input) {
    if (input && typeof input === 'string') {
      input = input.trim();
      // Match a number in the input
      const numberMatch = input.match(/(^-?\d+|^-?\d+\.\d*|^\d*\.\d+)(e\d+)?$/);
      // If a number is found, return that input.
      if (numberMatch) {
        return Number(numberMatch[0]);
      }
    }

    // If the input was invalid return the default value.
    return this.opt.default == null ? Number.NaN : this.opt.default;
  }
}

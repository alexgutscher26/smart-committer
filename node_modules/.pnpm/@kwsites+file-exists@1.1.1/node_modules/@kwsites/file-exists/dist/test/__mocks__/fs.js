"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
let statSyncMocks = [];
/**
 * Synchronously retrieves information about a file or directory.
 *
 * @param {...*} args - Variable arguments that are passed to the mock function.
 * @returns {Object} - The result of calling the configured mock function with the provided arguments.
 * @throws {Error} - Throws an error if no mock function is configured for fs.statSync.
 */
function statSync(...args) {
    const mock = statSyncMocks.shift();
    if (typeof mock !== 'function') {
        throw new Error(`fs.statSync called without configuring a mock`);
    }
    return mock(...args);
}
exports.statSync = statSync;
/**
 * Adds a mock function to the statSync mocks array.
 *
 * @function addStatSyncMock
 * @param {Function} fn - The mock function to be added.
 */
function addStatSyncMock(fn) {
    statSyncMocks.push(fn);
}
exports.addStatSyncMock = addStatSyncMock;
/**
 * Asserts that all mocks created for `fs.statSync` have been used.
 *
 * This function checks if there are any unused mocks in the `statSyncMocks` array.
 * If there are, it throws an error indicating the number of unused mocks.
 *
 * @throws {Error} - Throws an error if there are unused mocks for `fs.statSync`.
 */
function assertMocksUsed() {
    if (statSyncMocks.length) {
        throw new Error(`fs.afterEach: statSync has ${statSyncMocks.length} unused mocks`);
    }
}
exports.assertMocksUsed = assertMocksUsed;
const mockFs = {
    statSync,
};
exports.default = mockFs;
//# sourceMappingURL=fs.js.map
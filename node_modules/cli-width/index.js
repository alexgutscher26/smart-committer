'use strict';

module.exports = cliWidth;

/**
 * Normalizes the given options object by merging it with default values.
 *
 * @param {Object} [options] - The options object to be normalized. If not provided, defaults will be used.
 * @returns {Object} - The normalized options object with all required properties set.
 *
 * @example
 * const opts = normalizeOpts({ defaultWidth: 80 });
 * console.log(opts); // { defaultWidth: 80, output: [process.stdout], tty: [Function: tty] }
 */
function normalizeOpts(options) {
  const defaultOpts = {
    defaultWidth: 0,
    output: process.stdout,
    tty: require('tty'),
  };

  if (!options) {
    return defaultOpts;
  }

  Object.keys(defaultOpts).forEach(function (key) {
    if (!options[key]) {
      options[key] = defaultOpts[key];
    }
  });

  return options;
}

/**
 * Determines the width of the CLI window or environment.
 *
 * @param {Object} options - Options object containing configuration for width determination.
 * @return {number} The width of the CLI window or environment.
 */
function cliWidth(options) {
  const opts = normalizeOpts(options);

  if (opts.output.getWindowSize) {
    return opts.output.getWindowSize()[0] || opts.defaultWidth;
  }

  if (opts.tty.getWindowSize) {
    return opts.tty.getWindowSize()[1] || opts.defaultWidth;
  }

  if (opts.output.columns) {
    return opts.output.columns;
  }

  if (process.env.CLI_WIDTH) {
    const width = parseInt(process.env.CLI_WIDTH, 10);

    if (!isNaN(width) && width !== 0) {
      return width;
    }
  }

  return opts.defaultWidth;
}
